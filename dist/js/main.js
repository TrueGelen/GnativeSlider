/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./source/js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : undefined\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/regenerator-runtime/runtime.js\n");

/***/ }),

/***/ "./source/GnativeSlider.js":
/*!*********************************!*\
  !*** ./source/GnativeSlider.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GnativeSlider; });\n/* harmony import */ var regenerator_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n/* harmony import */ var regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar GnativeSlider =\n/*#__PURE__*/\nfunction () {\n  function GnativeSlider(settings) {\n    var _this = this;\n\n    _classCallCheck(this, GnativeSlider);\n\n    _defineProperty(this, \"dotClick\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(ind) {\n        var countStepTo;\n        return regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                countStepTo = _this.activeItemIndex - _this.arrActiveDots[ind];\n\n                if (countStepTo < 0) {\n                  if (_this.stackNext === 0 && _this.stackPrev === 0) {\n                    _this.stackNext = countStepTo * -1;\n\n                    _this.stackWatcher();\n                  } else if (_this.stackNext !== 0) _this.stackNext = countStepTo * -1;else if (_this.stackPrev !== 0) _this.stackNext = (countStepTo - 1) * -1;\n\n                  if (_this.stackPrev !== 0) _this.stackPrev = 1;\n                } else {\n                  if (_this.stackPrev === 0 && _this.stackNext === 0) {\n                    _this.stackPrev = countStepTo;\n\n                    _this.stackWatcher();\n                  } else if (_this.stackPrev !== 0) _this.stackPrev = countStepTo;else if (_this.stackNext !== 0) _this.stackPrev = countStepTo + 1;\n\n                  if (_this.stackNext !== 0) _this.stackNext = 1;\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(this, \"btnNextClick\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2() {\n      return regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!_this.finalSettings.loop) {\n                _context2.next = 5;\n                break;\n              }\n\n              _context2.next = 3;\n              return _this.slideWithLoop(true);\n\n            case 3:\n              _context2.next = 7;\n              break;\n\n            case 5:\n              _context2.next = 7;\n              return _this.slideWithoutLoop(true);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(this, \"btnPrevClick\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3() {\n      return regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!_this.finalSettings.loop) {\n                _context3.next = 5;\n                break;\n              }\n\n              _context3.next = 3;\n              return _this.slideWithLoop(false);\n\n            case 3:\n              _context3.next = 7;\n              break;\n\n            case 5:\n              _context3.next = 7;\n              return _this.slideWithoutLoop(false);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n\n    _defineProperty(this, \"getFirstTouch\", function (e) {\n      _this.itemsContainer.addEventListener('touchend', _this.getTouchEnd);\n\n      _this.firstTouchX = e.touches[0].clientX;\n      _this.firstTouchY = e.touches[0].clientY;\n\n      _this.itemsContainer.removeEventListener('touchstart', _this.getFirstTouch);\n    });\n\n    _defineProperty(this, \"getTouchEnd\",\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4(e) {\n        var direction;\n        return regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this.itemsContainer.removeEventListener('touchend', _this.getTouchEnd);\n\n                direction = Math.abs(_this.firstTouchX - e.changedTouches[0].clientX) > Math.abs(_this.firstTouchY - e.changedTouches[0].clientY);\n\n                if (!direction) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                if (!(_this.firstTouchX > e.changedTouches[0].clientX)) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                _context4.next = 6;\n                return _this.btnNextClick();\n\n              case 6:\n                _context4.next = 10;\n                break;\n\n              case 8:\n                _context4.next = 10;\n                return _this.btnPrevClick();\n\n              case 10:\n                _this.itemsContainer.addEventListener('touchstart', _this.getFirstTouch);\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    this.defaultSettings = {\n      loop: true,\n      itemsContainer: undefined,\n      animationTime: 200,\n      margin: '5px',\n      nav: true,\n      btnNext: undefined,\n      btnPrev: undefined,\n      dots: true,\n      dotsContainer: undefined,\n      exampleOfDot: undefined,\n      activeDotClass: undefined,\n      itemsCount: 1,\n      responsive: false,\n      breakpoints: {},\n      validation: false\n    };\n    if (settings.validation) this.validationOfTheInputObject(settings);\n    this.finalSettings = this.mergeSettings(this.defaultSettings, settings); //for the function getBreakPoint()\n\n    this.responsiveMap = this.getResponsiveMap();\n    this.wrapperItemsContainer = document.querySelector(this.finalSettings.itemsContainer);\n    this.itemsContainer = document.createElement('div');\n    this.items = this.itemsContainer.children; //to get the step of animation and to work the animation in the itemsBehavior()\n\n    this.widthItem = '0';\n    this.itemsCount = this.finalSettings.itemsCount;\n    this.activeItemIndex = 0;\n    this.isNav = this.finalSettings.nav;\n    this.btnNext = document.querySelector(this.finalSettings.btnNext);\n    this.btnPrev = document.querySelector(this.finalSettings.btnPrev); //to show buttons\n\n    if (this.isNode(this.btnNext)) this.displayOfButtons = this.getPropertyOfElement(this.btnNext, 'display'); //the map of references for active dots and items of slide\n\n    this.arrActiveDots = [0];\n    this.dotsContainer = document.querySelector(this.finalSettings.dotsContainer); //the made example of a dot for the slider\n\n    this.exampleOfDot = document.querySelector(this.finalSettings.exampleOfDot);\n    this.isDots = this.finalSettings.dots; //for swipe functions: getFirstTouch(), getTouchEnd(); and listeners in setEventListeners()\n\n    this.firstTouchX = 0;\n    this.firstTouchY = 0; //for the stack of calls\n\n    this.stackNext = 0;\n    this.stackPrev = 0; //for the setStepOfAnimation()\n\n    this.stepOfAnimation;\n    this.preparingItemsContainer();\n    this.setEventListeners();\n    return this;\n  }\n\n  _createClass(GnativeSlider, [{\n    key: \"getPropertyOfElement\",\n    value: function getPropertyOfElement(element, property) {\n      if (element.style[property] === '') {\n        return element.currentStyle ? element.currentStyle[property] : getComputedStyle(element, null)[property];\n      } else return element.style[property];\n    } // 1.remove text child of items container\n    // 2.make wrappers for items and items container \n\n  }, {\n    key: \"preparingItemsContainer\",\n    value: function preparingItemsContainer() {\n      for (var i = 0; i < this.wrapperItemsContainer.childNodes.length; i++) {\n        if (this.wrapperItemsContainer.childNodes[i].nodeName === \"#text\" || this.wrapperItemsContainer.childNodes[i].nodeName === \"#comment\") {\n          this.wrapperItemsContainer.childNodes[i].remove();\n          i--;\n        }\n      }\n\n      while (this.wrapperItemsContainer.firstChild) {\n        this.wrapperItemsContainer.firstChild.style.textAlign = this.getPropertyOfElement(this.wrapperItemsContainer.firstChild, 'textAlign');\n        this.wrapperItemsContainer.firstChild.style.width = '100%';\n        var wrapperItem = document.createElement('div');\n        wrapperItem.append(this.wrapperItemsContainer.firstChild);\n        this.itemsContainer.append(wrapperItem);\n      }\n\n      this.wrapperItemsContainer.append(this.itemsContainer);\n      this.itemsContainer.style.overflow = 'hidden';\n      this.itemsContainer.style.margin = \"0px -\".concat(this.finalSettings.margin, \" 0px -\").concat(this.finalSettings.margin);\n      this.itemsContainer.style.textAlign = 'left';\n    } //setting width of item without margin\n\n  }, {\n    key: \"preparingItems\",\n    value: function preparingItems() {\n      var itemsWidth = 100 / this.itemsCount;\n\n      for (var i = 0; i < this.items.length; i++) {\n        this.items[i].style.width = \"calc(\".concat(itemsWidth, \"% - \").concat(this.finalSettings.margin, \" - \").concat(this.finalSettings.margin, \")\");\n        this.items[i].style.margin = \"0px \".concat(this.finalSettings.margin);\n      }\n    }\n  }, {\n    key: \"isNode\",\n    value: function isNode(node) {\n      return node && (node.nodeType === 1 || node.nodeType == 11);\n    }\n  }, {\n    key: \"mergeSettings\",\n    value: function mergeSettings(defaultSettings, settings) {\n      return Object.assign(defaultSettings, settings);\n    }\n  }, {\n    key: \"isResponsive\",\n    value: function isResponsive() {\n      if (this.finalSettings.responsive) {\n        for (var key in this.finalSettings.breakpoints) {\n          if (key > window.innerWidth) return true;\n        }\n\n        return false;\n      } else return false;\n    }\n  }, {\n    key: \"setIsNav\",\n    value: function setIsNav() {\n      var widthOfScreen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n      if (widthOfScreen !== undefined) {\n        if (this.finalSettings.breakpoints[widthOfScreen].nav !== undefined) this.isNav = this.finalSettings.breakpoints[widthOfScreen].nav;\n      } else {\n        this.isNav = this.finalSettings.nav;\n      }\n\n      if (this.isNode(this.btnNext) && this.isNode(this.btnPrev)) {\n        if (!this.isNav) {\n          this.btnNext.style.display = 'none';\n          this.btnPrev.style.display = 'none';\n        } else {\n          this.btnNext.style.display = this.displayOfButtons;\n          this.btnPrev.style.display = this.displayOfButtons;\n        }\n      } else return false;\n    } //for getting this.itemsCount\n\n  }, {\n    key: \"setItemsCount\",\n    value: function setItemsCount() {\n      var isResponsive = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var widthOfScreen = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n      if (isResponsive) {\n        if (typeof this.finalSettings.breakpoints[widthOfScreen].itemsCount !== \"number\") return false;\n        this.itemsCount = this.finalSettings.breakpoints[widthOfScreen].itemsCount;\n      } else {\n        this.itemsCount = this.finalSettings.itemsCount;\n      }\n    }\n  }, {\n    key: \"setStepOfAnimation\",\n    value: function setStepOfAnimation() {\n      this.stepOfAnimation = this.widthItem / (this.finalSettings.animationTime / 5);\n    } //on button, swipe but not dots\n\n  }, {\n    key: \"itemsBehavior\",\n    value: function itemsBehavior(directionToggle) {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        var step = 0;\n        var startAnimate;\n\n        var callbackForForwardAnim = function callbackForForwardAnim() {\n          _this2.items[_this2.itemsCount].style.animationName = 'none';\n          _this2.items[_this2.itemsCount].style.margin = \"0px \".concat(_this2.finalSettings.margin);\n          _this2.items[0].style.animationName = 'none';\n          _this2.items[0].style.display = 'none';\n          _this2.items[0].style.margin = \"0px \".concat(_this2.finalSettings.margin);\n\n          _this2.itemsContainer.append(_this2.items[0]);\n\n          step = 0;\n        };\n\n        var callbackForBackwardAnim = function callbackForBackwardAnim() {\n          _this2.items[0].style.animationName = 'none';\n          _this2.items[0].style.margin = \"0px \".concat(_this2.finalSettings.margin);\n          _this2.items[_this2.itemsCount].style.animationName = 'none';\n          _this2.items[_this2.itemsCount].style.display = 'none';\n          _this2.items[_this2.itemsCount].style.margin = \"0px \".concat(_this2.finalSettings.margin);\n          _this2.itemsContainer.style.textAlign = 'left';\n          step = 0;\n        };\n\n        var forwardAnim = function forwardAnim() {\n          step += _this2.stepOfAnimation;\n          _this2.items[0].style.marginLeft = \"-\" + step + \"px\";\n\n          if (parseInt(_this2.items[0].style.marginLeft) * -1 > Number(_this2.widthItem)) {\n            clearInterval(startAnimate);\n            callbackForForwardAnim();\n            resolve();\n          }\n        };\n\n        var backwardAnim = function backwardAnim() {\n          step += _this2.stepOfAnimation;\n          _this2.items[_this2.itemsCount].style.marginRight = \"-\" + step + \"px\";\n\n          if (parseInt(_this2.items[_this2.itemsCount].style.marginRight) * -1 > Number(_this2.widthItem)) {\n            clearInterval(startAnimate);\n            callbackForBackwardAnim();\n            resolve();\n          }\n        };\n\n        if (directionToggle) {\n          _this2.items[_this2.itemsCount].style.display = 'inline-block';\n          _this2.items[_this2.itemsCount].style.marginRight = \"-\".concat(Number(_this2.widthItem), \"px\");\n          startAnimate = setInterval(forwardAnim, 5);\n        } else {\n          _this2.items[_this2.items.length - 1].style.marginLeft = \"-\".concat(Number(_this2.widthItem), \"px\");\n          _this2.items[_this2.items.length - 1].style.display = 'inline-block';\n\n          _this2.itemsContainer.prepend(_this2.items[_this2.items.length - 1]);\n\n          _this2.itemsContainer.style.textAlign = 'right';\n          startAnimate = setInterval(backwardAnim, 5);\n        }\n      });\n    } //setting this.widthItem for this.itemsBehavior(directionToggle)\n\n  }, {\n    key: \"setWidthItem\",\n    value: function setWidthItem() {\n      this.widthItem = (this.items[0].getBoundingClientRect().width + parseInt(this.items[0].style.marginLeft)).toString();\n    }\n  }, {\n    key: \"createItems\",\n    value: function createItems() {\n      for (var i = 0; i < this.items.length; i++) {\n        this.items[i].style.display = 'none';\n      }\n\n      for (var _i = 0; _i < this.itemsCount; _i++) {\n        this.items[_i].style.display = 'inline-block';\n      }\n    }\n  }, {\n    key: \"setIsDots\",\n    value: function setIsDots() {\n      var widthOfScreen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n      if (widthOfScreen !== undefined) {\n        if (this.finalSettings.breakpoints[widthOfScreen].dots !== undefined) this.isDots = this.finalSettings.breakpoints[widthOfScreen].dots;\n      } else {\n        this.isDots = this.finalSettings.dots;\n      }\n    }\n  }, {\n    key: \"setArrActiveDots\",\n    value: function setArrActiveDots() {\n      this.arrActiveDots = [0];\n      var total = 0;\n\n      for (var i = 0; i < this.items.length; i += this.itemsCount) {\n        total += this.itemsCount;\n        if (total <= this.items.length - 1) this.arrActiveDots.push(total);\n      }\n\n      if (this.arrActiveDots[this.arrActiveDots.length - 1] !== this.items.length - this.itemsCount) {\n        this.arrActiveDots[this.arrActiveDots.length - 1] = this.items.length - this.itemsCount;\n      }\n    }\n  }, {\n    key: \"dotsBehavior\",\n    value: function dotsBehavior() {\n      if (this.arrActiveDots.length === 1) {\n        this.dotsContainer.childNodes[this.activeItemIndex].classList.remove(this.finalSettings.activeDotClass);\n        this.dotsContainer.childNodes[this.activeItemIndex + 1].classList.add(this.finalSettings.activeDotClass);\n      } else {\n        for (var i = 0; i < this.arrActiveDots.length; i++) {\n          if (this.activeItemIndex === this.arrActiveDots[i]) {\n            var currentActiveDot = this.dotsContainer.querySelector(\".\" + this.finalSettings.activeDotClass);\n            var activeIndex = this.arrActiveDots.indexOf(this.arrActiveDots[i]);\n            currentActiveDot.classList.remove(this.finalSettings.activeDotClass);\n            this.dotsContainer.childNodes[activeIndex].classList.add(this.finalSettings.activeDotClass);\n            return false;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"removeDots\",\n    value: function removeDots() {\n      if (this.isNode(this.dotsContainer)) {\n        while (this.dotsContainer.firstChild) {\n          this.dotsContainer.firstChild.remove();\n        }\n      }\n    }\n  }, {\n    key: \"createDots\",\n    value: function createDots() {\n      this.removeDots();\n      var dotsCount;\n      if (typeof this.itemsCount !== \"number\") return false;else dotsCount = Math.ceil(this.items.length / this.itemsCount);\n\n      for (var i = 0; i < dotsCount; i++) {\n        this.dotsContainer.append(this.exampleOfDot.cloneNode(true));\n      }\n\n      for (var _i2 = 0; _i2 < this.arrActiveDots.length; _i2++) {\n        if (this.activeItemIndex < this.arrActiveDots[_i2]) {\n          this.dotsContainer.children[_i2 - 1].classList.add(this.finalSettings.activeDotClass);\n\n          return false;\n        } else if (this.activeItemIndex == this.arrActiveDots[_i2]) {\n          this.dotsContainer.children[_i2].classList.add(this.finalSettings.activeDotClass);\n\n          return false;\n        } else if (this.activeIndex == 0 || this.activeIndex > this.arrActiveDots.length - 1) {\n          this.dotsContainer.firstChild.classList.add(this.finalSettings.activeDotClass);\n          return false;\n        }\n      }\n    }\n  }, {\n    key: \"setEventListenerForDots\",\n    value: function setEventListenerForDots() {\n      for (var i = 0; i < this.dotsContainer.children.length; i++) {\n        this.dotsContainer.children[i].addEventListener('click', this.dotClick.bind(this, i));\n      }\n    } //for getBreakPoint()\n\n  }, {\n    key: \"getResponsiveMap\",\n    value: function getResponsiveMap() {\n      return Object.keys(this.finalSettings.breakpoints);\n    } //for getting the actual width\n\n  }, {\n    key: \"getBreakPoint\",\n    value: function getBreakPoint() {\n      for (var i = 0; i < this.responsiveMap.length; i++) {\n        if (Number(this.responsiveMap[i]) > window.innerWidth) {\n          return this.responsiveMap[i];\n        }\n      }\n    }\n  }, {\n    key: \"createSlider\",\n    value: function createSlider() {\n      //this.preparingItemsContainer()\n      if (this.isResponsive()) {\n        var breakPoint = this.getBreakPoint();\n        this.setItemsCount(true, breakPoint);\n        this.setIsDots(breakPoint);\n        this.setArrActiveDots();\n        this.setIsNav(breakPoint);\n      } else {\n        this.setItemsCount(false);\n        this.setArrActiveDots();\n        this.setIsDots();\n        this.setIsNav();\n      }\n\n      if (this.isDots) {\n        this.createDots();\n        this.setEventListenerForDots();\n      } else this.removeDots();\n\n      this.preparingItems();\n      this.createItems();\n      this.setWidthItem();\n      this.setStepOfAnimation();\n    }\n  }, {\n    key: \"slideWithLoop\",\n    value: function () {\n      var _slideWithLoop = _asyncToGenerator(\n      /*#__PURE__*/\n      regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee5(directionToggle) {\n        return regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!directionToggle) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                _context5.next = 3;\n                return this.itemsBehavior(directionToggle);\n\n              case 3:\n                //dots behavior-------------------------------------------------\n                if (this.activeItemIndex + 1 < this.items.length) {\n                  this.activeItemIndex++;\n                  if (this.isDots) this.dotsBehavior();\n                } else {\n                  this.activeItemIndex = 0;\n                  if (this.isDots) this.dotsBehavior();\n                }\n\n                _context5.next = 9;\n                break;\n\n              case 6:\n                _context5.next = 8;\n                return this.itemsBehavior(directionToggle);\n\n              case 8:\n                //dots behavior-------------------------------------------------\n                if (this.activeItemIndex - 1 > -1) {\n                  this.activeItemIndex--;\n                  if (this.isDots) this.dotsBehavior();\n                } else {\n                  this.activeItemIndex = this.items.length - 1;\n                  if (this.isDots) this.dotsBehavior();\n                }\n\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function slideWithLoop(_x3) {\n        return _slideWithLoop.apply(this, arguments);\n      }\n\n      return slideWithLoop;\n    }()\n  }, {\n    key: \"slideWithoutLoop\",\n    value: function () {\n      var _slideWithoutLoop = _asyncToGenerator(\n      /*#__PURE__*/\n      regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee6(directionToggle) {\n        return regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!directionToggle) {\n                  _context6.next = 11;\n                  break;\n                }\n\n                if (!(this.activeItemIndex + this.itemsCount <= this.items.length - 1)) {\n                  _context6.next = 8;\n                  break;\n                }\n\n                _context6.next = 4;\n                return this.itemsBehavior(directionToggle, 0, this.itemsCount);\n\n              case 4:\n                this.activeItemIndex++;\n                if (this.isDots) this.dotsBehavior();\n                _context6.next = 9;\n                break;\n\n              case 8:\n                return _context6.abrupt(\"return\", false);\n\n              case 9:\n                _context6.next = 19;\n                break;\n\n              case 11:\n                if (!(this.activeItemIndex - 1 >= 0)) {\n                  _context6.next = 18;\n                  break;\n                }\n\n                _context6.next = 14;\n                return this.itemsBehavior(directionToggle, this.itemsCount - 1, this.items.length - 1);\n\n              case 14:\n                this.activeItemIndex--;\n                if (this.isDots) this.dotsBehavior();\n                _context6.next = 19;\n                break;\n\n              case 18:\n                return _context6.abrupt(\"return\", false);\n\n              case 19:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function slideWithoutLoop(_x4) {\n        return _slideWithoutLoop.apply(this, arguments);\n      }\n\n      return slideWithoutLoop;\n    }()\n  }, {\n    key: \"stackWatcher\",\n    value: function () {\n      var _stackWatcher = _asyncToGenerator(\n      /*#__PURE__*/\n      regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee7() {\n        return regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!(this.stackNext > 0)) {\n                  _context7.next = 7;\n                  break;\n                }\n\n                _context7.next = 3;\n                return this.btnNextClick();\n\n              case 3:\n                this.stackNext--;\n                this.stackWatcher();\n                _context7.next = 12;\n                break;\n\n              case 7:\n                if (!(this.stackPrev > 0)) {\n                  _context7.next = 12;\n                  break;\n                }\n\n                _context7.next = 10;\n                return this.btnPrevClick();\n\n              case 10:\n                this.stackPrev--;\n                this.stackWatcher();\n\n              case 12:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function stackWatcher() {\n        return _stackWatcher.apply(this, arguments);\n      }\n\n      return stackWatcher;\n    }()\n  }, {\n    key: \"setEventListeners\",\n    value: function setEventListeners() {\n      var _this3 = this;\n\n      if (this.finalSettings.responsive) {\n        window.addEventListener('resize', function () {\n          _this3.createSlider();\n        });\n      }\n\n      this.itemsContainer.addEventListener('touchstart', this.getFirstTouch);\n      this.itemsContainer.addEventListener('touchend', this.getTouchEnd); //to not give a fatal error. There is the validationOfTheInputObject ror checking the input object\n\n      if (this.isNode(this.btnNext) && this.isNode(this.btnPrev)) {\n        this.btnNext.addEventListener('click', function () {\n          _this3.stackNext++;\n\n          if (_this3.stackNext === 1 && _this3.stackPrev === 0) {\n            _this3.stackWatcher();\n          }\n\n          if (_this3.stackPrev !== 0) _this3.stackPrev = 1;\n        });\n        this.btnPrev.addEventListener('click', function () {\n          _this3.stackPrev++;\n\n          if (_this3.stackPrev === 1 && _this3.stackNext === 0) {\n            _this3.stackWatcher();\n          }\n\n          if (_this3.stackNext !== 0) _this3.stackNext = 1;\n        });\n      }\n    }\n  }, {\n    key: \"validationOfTheInputObject\",\n    value: function validationOfTheInputObject(settings) {\n      var _this4 = this;\n\n      var validateNav = function validateNav() {\n        if (typeof settings.btnNext !== 'string' || !_this4.isNode(document.querySelector(settings.btnNext))) throw new Error('Type of btnNext must be a string. The example: btnNext: \".someSection .someWrapper .someClass\"');\n        if (typeof settings.btnPrev !== 'string' || !_this4.isNode(document.querySelector(settings.btnPrev))) throw new Error('Type of btnPrev must be a string. The example: btnPrev: \".someSection .someWrapper .someClass\"');\n      };\n\n      if (_typeof(settings) !== 'object') throw new Error('Your options must be an object. The example: new GnativeSlider({itemsContainer: \".someSection .someWrapper .someClass\"})');\n      if (typeof settings.itemsContainer !== 'string' || !this.isNode(document.querySelector(settings.itemsContainer))) throw new Error('itemsContainer is a required field. Type of itemsContainer must be a string. The example: itemsContainer: \".someSection .someWrapper .someClass\"');\n      if (settings.nav === true) validateNav();\n      if (typeof settings.dotsContainer !== 'string' || !this.isNode(document.querySelector(settings.dotsContainer))) throw new Error('dotsContainer is a required field. Type of dotsContainer must be a string. The example: dotsContainer: \".someSection .someWrapper .someClass\"');\n      if (typeof settings.exampleOfDot !== 'string' || !this.isNode(document.querySelector(settings.exampleOfDot))) throw new Error('exampleOfDot is a required field. Type of exampleOfDot must be a string. The example: exampleOfDot: \".someSection .someWrapper .someClass\"');\n      if (typeof settings.activeDotClass !== 'string') throw new Error('activeDotClass is a required field. Type of activeDotClass must be a string. The example: activeDotClass: \"yourActiveDotClass\"');\n      if ('loop' in settings) if (typeof settings.loop !== 'boolean') throw new Error('loop is not a required field. The default value is true. Type of loop must be a boolean. The example: loop: false');\n      if ('animationTime' in settings) if (typeof settings.animationTime !== 'number') throw new Error('animationTime is not a required field. The default value is 200 ms. Type of loop must be a number. The example: animationTime: 200');\n      if ('margin' in settings) if (typeof settings.margin !== 'string') throw new Error('margin is not a required field. The default value is 5px. Also margin can only be in pixels. Type of margin must be a string. The example: margin: \"5px\"');\n      if ('nav' in settings) if (typeof settings.nav !== 'boolean') throw new Error('nav is not a required field. The default value is true. Type of nav must be a boolean. The example: nav: true');\n      if ('dots' in settings) if (typeof settings.dots !== 'boolean') throw new Error('dots is not a required field. The default value is true. Type of dots must be a boolean. The example: dots: true');\n      if ('itemsCount' in settings) if (typeof settings.itemsCount !== 'number') throw new Error('itemsCount is not a required field. The default value is 1. Type of itemsCount must be a number. The example: itemsCount: 1');\n      if ('responsive' in settings) if (typeof settings.responsive !== 'boolean') throw new Error('responsive is not a required field. The default value is false. Type of responsive must be a boolean. The example: responsive: true');\n\n      if ('breakpoints' in settings) {\n        for (var key in settings.breakpoints) {\n          //check of the key\n          if (typeof key !== 'string') throw new Error('Type of key of breakpoints must be a string. The example: breakpoints: \"1100\": {dots: true, nav: true}');\n          if (isNaN(Number(key))) throw new Error('key of breakpoints must be a number but represented as a string. The example: breakpoints: \"1100\": {dots: true, nav: true}');\n\n          if (_typeof(settings.breakpoints[key]) !== \"object\") {\n            throw new Error('keys of breakpoints must contains objects. The example: breakpoints: \"1100\": {dots: true, nav: true}, \"960\": {dots: false, nav: true}');\n          } //check of the object inside the key\n          else {\n              if ('itemsCount' in settings.breakpoints[key]) {\n                if (typeof settings.breakpoints[key].itemsCount !== 'number') throw new Error('Error in breakpoints.' + key + '. Type of itemsCount must be a number. The example: itemsCount: 1');\n              } else {\n                throw new Error('itemsCount in breakpoints is a required field. Type of itemsCount must be a number. The example: itemsCount: 1');\n              }\n\n              if ('dots' in settings.breakpoints[key]) {\n                if (typeof settings.breakpoints[key].dots !== 'boolean') throw new Error('Error in breakpoints.' + key + '. Type of dots must be a boolean. The example: dots: true');\n              } else {\n                throw new Error('dots in breakpoints is a required field. Type of dots must be a boolean. The example: dots: true');\n              }\n\n              if ('nav' in settings.breakpoints[key]) {\n                if (typeof settings.breakpoints[key].nav !== 'boolean') throw new Error('Error in breakpoints.' + key + '. Type of nav must be a boolean. The example: nav: true');else if (settings.breakpoints[key].nav) validateNav();\n              } else {\n                throw new Error('dots in breakpoints is a required field. Type of nav must be a boolean. The example: nav: true');\n              }\n            }\n        }\n      }\n    }\n  }]);\n\n  return GnativeSlider;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zb3VyY2UvR25hdGl2ZVNsaWRlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NvdXJjZS9HbmF0aXZlU2xpZGVyLmpzPzFlNmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJlZ2VuZXJhdG9yUnVudGltZSBmcm9tIFwicmVnZW5lcmF0b3ItcnVudGltZVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR25hdGl2ZVNsaWRlciB7XHJcblx0Y29uc3RydWN0b3Ioc2V0dGluZ3MpIHtcclxuXHRcdHRoaXMuZGVmYXVsdFNldHRpbmdzID0ge1xyXG5cdFx0XHRsb29wOiB0cnVlLFxyXG5cdFx0XHRpdGVtc0NvbnRhaW5lcjogdW5kZWZpbmVkLFxyXG5cdFx0XHRhbmltYXRpb25UaW1lOiAyMDAsXHJcblx0XHRcdG1hcmdpbjogJzVweCcsXHJcblx0XHRcdG5hdjogdHJ1ZSxcclxuXHRcdFx0YnRuTmV4dDogdW5kZWZpbmVkLFxyXG5cdFx0XHRidG5QcmV2OiB1bmRlZmluZWQsXHJcblx0XHRcdGRvdHM6IHRydWUsXHJcblx0XHRcdGRvdHNDb250YWluZXI6IHVuZGVmaW5lZCxcclxuXHRcdFx0ZXhhbXBsZU9mRG90OiB1bmRlZmluZWQsXHJcblx0XHRcdGFjdGl2ZURvdENsYXNzOiB1bmRlZmluZWQsXHJcblx0XHRcdGl0ZW1zQ291bnQ6IDEsXHJcblx0XHRcdHJlc3BvbnNpdmU6IGZhbHNlLFxyXG5cdFx0XHRicmVha3BvaW50czoge30sXHJcblx0XHRcdHZhbGlkYXRpb246IGZhbHNlXHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKHNldHRpbmdzLnZhbGlkYXRpb24pXHJcblx0XHRcdHRoaXMudmFsaWRhdGlvbk9mVGhlSW5wdXRPYmplY3Qoc2V0dGluZ3MpXHJcblxyXG5cdFx0dGhpcy5maW5hbFNldHRpbmdzID0gdGhpcy5tZXJnZVNldHRpbmdzKHRoaXMuZGVmYXVsdFNldHRpbmdzLCBzZXR0aW5ncylcclxuXHJcblx0XHQvL2ZvciB0aGUgZnVuY3Rpb24gZ2V0QnJlYWtQb2ludCgpXHJcblx0XHR0aGlzLnJlc3BvbnNpdmVNYXAgPSB0aGlzLmdldFJlc3BvbnNpdmVNYXAoKVxyXG5cclxuXHRcdHRoaXMud3JhcHBlckl0ZW1zQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLmZpbmFsU2V0dGluZ3MuaXRlbXNDb250YWluZXIpXHJcblx0XHR0aGlzLml0ZW1zQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcclxuXHRcdHRoaXMuaXRlbXMgPSB0aGlzLml0ZW1zQ29udGFpbmVyLmNoaWxkcmVuXHJcblx0XHQvL3RvIGdldCB0aGUgc3RlcCBvZiBhbmltYXRpb24gYW5kIHRvIHdvcmsgdGhlIGFuaW1hdGlvbiBpbiB0aGUgaXRlbXNCZWhhdmlvcigpXHJcblx0XHR0aGlzLndpZHRoSXRlbSA9ICcwJ1xyXG5cdFx0dGhpcy5pdGVtc0NvdW50ID0gdGhpcy5maW5hbFNldHRpbmdzLml0ZW1zQ291bnRcclxuXHRcdHRoaXMuYWN0aXZlSXRlbUluZGV4ID0gMFxyXG5cclxuXHRcdHRoaXMuaXNOYXYgPSB0aGlzLmZpbmFsU2V0dGluZ3MubmF2XHJcblx0XHR0aGlzLmJ0bk5leHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuZmluYWxTZXR0aW5ncy5idG5OZXh0KVxyXG5cdFx0dGhpcy5idG5QcmV2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLmZpbmFsU2V0dGluZ3MuYnRuUHJldilcclxuXHRcdC8vdG8gc2hvdyBidXR0b25zXHJcblx0XHRpZiAodGhpcy5pc05vZGUodGhpcy5idG5OZXh0KSlcclxuXHRcdFx0dGhpcy5kaXNwbGF5T2ZCdXR0b25zID0gdGhpcy5nZXRQcm9wZXJ0eU9mRWxlbWVudCh0aGlzLmJ0bk5leHQsICdkaXNwbGF5JylcclxuXHJcblx0XHQvL3RoZSBtYXAgb2YgcmVmZXJlbmNlcyBmb3IgYWN0aXZlIGRvdHMgYW5kIGl0ZW1zIG9mIHNsaWRlXHJcblx0XHR0aGlzLmFyckFjdGl2ZURvdHMgPSBbMF1cclxuXHRcdHRoaXMuZG90c0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5maW5hbFNldHRpbmdzLmRvdHNDb250YWluZXIpXHJcblx0XHQvL3RoZSBtYWRlIGV4YW1wbGUgb2YgYSBkb3QgZm9yIHRoZSBzbGlkZXJcclxuXHRcdHRoaXMuZXhhbXBsZU9mRG90ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLmZpbmFsU2V0dGluZ3MuZXhhbXBsZU9mRG90KVxyXG5cdFx0dGhpcy5pc0RvdHMgPSB0aGlzLmZpbmFsU2V0dGluZ3MuZG90c1xyXG5cclxuXHRcdC8vZm9yIHN3aXBlIGZ1bmN0aW9uczogZ2V0Rmlyc3RUb3VjaCgpLCBnZXRUb3VjaEVuZCgpOyBhbmQgbGlzdGVuZXJzIGluIHNldEV2ZW50TGlzdGVuZXJzKClcclxuXHRcdHRoaXMuZmlyc3RUb3VjaFggPSAwXHJcblx0XHR0aGlzLmZpcnN0VG91Y2hZID0gMFxyXG5cclxuXHRcdC8vZm9yIHRoZSBzdGFjayBvZiBjYWxsc1xyXG5cdFx0dGhpcy5zdGFja05leHQgPSAwXHJcblx0XHR0aGlzLnN0YWNrUHJldiA9IDBcclxuXHJcblx0XHQvL2ZvciB0aGUgc2V0U3RlcE9mQW5pbWF0aW9uKClcclxuXHRcdHRoaXMuc3RlcE9mQW5pbWF0aW9uXHJcblxyXG5cdFx0dGhpcy5wcmVwYXJpbmdJdGVtc0NvbnRhaW5lcigpXHJcblx0XHR0aGlzLnNldEV2ZW50TGlzdGVuZXJzKClcclxuXHJcblxyXG5cdFx0cmV0dXJuIHRoaXNcclxuXHR9XHJcblxyXG5cdGdldFByb3BlcnR5T2ZFbGVtZW50KGVsZW1lbnQsIHByb3BlcnR5KSB7XHJcblx0XHRpZiAoZWxlbWVudC5zdHlsZVtwcm9wZXJ0eV0gPT09ICcnKSB7XHJcblx0XHRcdHJldHVybiBlbGVtZW50LmN1cnJlbnRTdHlsZSA/IGVsZW1lbnQuY3VycmVudFN0eWxlW3Byb3BlcnR5XSA6IGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCwgbnVsbClbcHJvcGVydHldXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHRcdHJldHVybiBlbGVtZW50LnN0eWxlW3Byb3BlcnR5XVxyXG5cdH1cclxuXHJcblx0Ly8gMS5yZW1vdmUgdGV4dCBjaGlsZCBvZiBpdGVtcyBjb250YWluZXJcclxuXHQvLyAyLm1ha2Ugd3JhcHBlcnMgZm9yIGl0ZW1zIGFuZCBpdGVtcyBjb250YWluZXIgXHJcblx0cHJlcGFyaW5nSXRlbXNDb250YWluZXIoKSB7XHJcblx0XHRmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMud3JhcHBlckl0ZW1zQ29udGFpbmVyLmNoaWxkTm9kZXMubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0aWYgKHRoaXMud3JhcHBlckl0ZW1zQ29udGFpbmVyLmNoaWxkTm9kZXNbaV0ubm9kZU5hbWUgPT09IFwiI3RleHRcIiB8fFxyXG5cdFx0XHRcdHRoaXMud3JhcHBlckl0ZW1zQ29udGFpbmVyLmNoaWxkTm9kZXNbaV0ubm9kZU5hbWUgPT09IFwiI2NvbW1lbnRcIikge1xyXG5cdFx0XHRcdHRoaXMud3JhcHBlckl0ZW1zQ29udGFpbmVyLmNoaWxkTm9kZXNbaV0ucmVtb3ZlKClcclxuXHRcdFx0XHRpLS1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHdoaWxlICh0aGlzLndyYXBwZXJJdGVtc0NvbnRhaW5lci5maXJzdENoaWxkKSB7XHJcblx0XHRcdHRoaXMud3JhcHBlckl0ZW1zQ29udGFpbmVyLmZpcnN0Q2hpbGQuc3R5bGUudGV4dEFsaWduID0gdGhpcy5nZXRQcm9wZXJ0eU9mRWxlbWVudCh0aGlzLndyYXBwZXJJdGVtc0NvbnRhaW5lci5maXJzdENoaWxkLCAndGV4dEFsaWduJylcclxuXHRcdFx0dGhpcy53cmFwcGVySXRlbXNDb250YWluZXIuZmlyc3RDaGlsZC5zdHlsZS53aWR0aCA9ICcxMDAlJ1xyXG5cdFx0XHRsZXQgd3JhcHBlckl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxyXG5cdFx0XHR3cmFwcGVySXRlbS5hcHBlbmQodGhpcy53cmFwcGVySXRlbXNDb250YWluZXIuZmlyc3RDaGlsZClcclxuXHRcdFx0dGhpcy5pdGVtc0NvbnRhaW5lci5hcHBlbmQod3JhcHBlckl0ZW0pXHJcblx0XHR9XHJcblxyXG5cdFx0dGhpcy53cmFwcGVySXRlbXNDb250YWluZXIuYXBwZW5kKHRoaXMuaXRlbXNDb250YWluZXIpXHJcblxyXG5cdFx0dGhpcy5pdGVtc0NvbnRhaW5lci5zdHlsZS5vdmVyZmxvdyA9ICdoaWRkZW4nXHJcblx0XHR0aGlzLml0ZW1zQ29udGFpbmVyLnN0eWxlLm1hcmdpbiA9IGAwcHggLSR7dGhpcy5maW5hbFNldHRpbmdzLm1hcmdpbn0gMHB4IC0ke3RoaXMuZmluYWxTZXR0aW5ncy5tYXJnaW59YFxyXG5cdFx0dGhpcy5pdGVtc0NvbnRhaW5lci5zdHlsZS50ZXh0QWxpZ24gPSAnbGVmdCdcclxuXHR9XHJcblxyXG5cdC8vc2V0dGluZyB3aWR0aCBvZiBpdGVtIHdpdGhvdXQgbWFyZ2luXHJcblx0cHJlcGFyaW5nSXRlbXMoKSB7XHJcblx0XHRsZXQgaXRlbXNXaWR0aCA9IDEwMCAvIHRoaXMuaXRlbXNDb3VudFxyXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLml0ZW1zLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHRoaXMuaXRlbXNbaV0uc3R5bGUud2lkdGggPSBgY2FsYygke2l0ZW1zV2lkdGh9JSAtICR7dGhpcy5maW5hbFNldHRpbmdzLm1hcmdpbn0gLSAke3RoaXMuZmluYWxTZXR0aW5ncy5tYXJnaW59KWBcclxuXHRcdFx0dGhpcy5pdGVtc1tpXS5zdHlsZS5tYXJnaW4gPSBgMHB4ICR7dGhpcy5maW5hbFNldHRpbmdzLm1hcmdpbn1gXHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRpc05vZGUobm9kZSkge1xyXG5cdFx0cmV0dXJuIG5vZGUgJiYgKG5vZGUubm9kZVR5cGUgPT09IDEgfHwgbm9kZS5ub2RlVHlwZSA9PSAxMSlcclxuXHR9XHJcblxyXG5cdG1lcmdlU2V0dGluZ3MoZGVmYXVsdFNldHRpbmdzLCBzZXR0aW5ncykge1xyXG5cdFx0cmV0dXJuIE9iamVjdC5hc3NpZ24oZGVmYXVsdFNldHRpbmdzLCBzZXR0aW5ncylcclxuXHR9XHJcblxyXG5cdGlzUmVzcG9uc2l2ZSgpIHtcclxuXHRcdGlmICh0aGlzLmZpbmFsU2V0dGluZ3MucmVzcG9uc2l2ZSkge1xyXG5cdFx0XHRmb3IgKGxldCBrZXkgaW4gdGhpcy5maW5hbFNldHRpbmdzLmJyZWFrcG9pbnRzKSB7XHJcblx0XHRcdFx0aWYgKGtleSA+IHdpbmRvdy5pbm5lcldpZHRoKVxyXG5cdFx0XHRcdFx0cmV0dXJuIHRydWVcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gZmFsc2VcclxuXHRcdH0gZWxzZVxyXG5cdFx0XHRyZXR1cm4gZmFsc2VcclxuXHR9XHJcblxyXG5cdHNldElzTmF2KHdpZHRoT2ZTY3JlZW4gPSB1bmRlZmluZWQpIHtcclxuXHRcdGlmICh3aWR0aE9mU2NyZWVuICE9PSB1bmRlZmluZWQpIHtcclxuXHRcdFx0aWYgKHRoaXMuZmluYWxTZXR0aW5ncy5icmVha3BvaW50c1t3aWR0aE9mU2NyZWVuXS5uYXYgIT09IHVuZGVmaW5lZClcclxuXHRcdFx0XHR0aGlzLmlzTmF2ID0gdGhpcy5maW5hbFNldHRpbmdzLmJyZWFrcG9pbnRzW3dpZHRoT2ZTY3JlZW5dLm5hdlxyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0dGhpcy5pc05hdiA9IHRoaXMuZmluYWxTZXR0aW5ncy5uYXZcclxuXHRcdH1cclxuXHJcblx0XHRpZiAodGhpcy5pc05vZGUodGhpcy5idG5OZXh0KSAmJiB0aGlzLmlzTm9kZSh0aGlzLmJ0blByZXYpKSB7XHJcblx0XHRcdGlmICghdGhpcy5pc05hdikge1xyXG5cdFx0XHRcdHRoaXMuYnRuTmV4dC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXHJcblx0XHRcdFx0dGhpcy5idG5QcmV2LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlIHtcclxuXHRcdFx0XHR0aGlzLmJ0bk5leHQuc3R5bGUuZGlzcGxheSA9IHRoaXMuZGlzcGxheU9mQnV0dG9uc1xyXG5cdFx0XHRcdHRoaXMuYnRuUHJldi5zdHlsZS5kaXNwbGF5ID0gdGhpcy5kaXNwbGF5T2ZCdXR0b25zXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdGVsc2VcclxuXHRcdFx0cmV0dXJuIGZhbHNlXHJcblx0fVxyXG5cclxuXHQvL2ZvciBnZXR0aW5nIHRoaXMuaXRlbXNDb3VudFxyXG5cdHNldEl0ZW1zQ291bnQoaXNSZXNwb25zaXZlID0gZmFsc2UsIHdpZHRoT2ZTY3JlZW4gPSB1bmRlZmluZWQpIHtcclxuXHRcdGlmIChpc1Jlc3BvbnNpdmUpIHtcclxuXHRcdFx0aWYgKHR5cGVvZiAodGhpcy5maW5hbFNldHRpbmdzLmJyZWFrcG9pbnRzW3dpZHRoT2ZTY3JlZW5dLml0ZW1zQ291bnQpICE9PSBcIm51bWJlclwiKVxyXG5cdFx0XHRcdHJldHVybiBmYWxzZVxyXG5cdFx0XHR0aGlzLml0ZW1zQ291bnQgPSB0aGlzLmZpbmFsU2V0dGluZ3MuYnJlYWtwb2ludHNbd2lkdGhPZlNjcmVlbl0uaXRlbXNDb3VudFxyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0dGhpcy5pdGVtc0NvdW50ID0gdGhpcy5maW5hbFNldHRpbmdzLml0ZW1zQ291bnRcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHNldFN0ZXBPZkFuaW1hdGlvbigpIHtcclxuXHRcdHRoaXMuc3RlcE9mQW5pbWF0aW9uID0gdGhpcy53aWR0aEl0ZW0gLyAodGhpcy5maW5hbFNldHRpbmdzLmFuaW1hdGlvblRpbWUgLyA1KVxyXG5cdH1cclxuXHJcblx0Ly9vbiBidXR0b24sIHN3aXBlIGJ1dCBub3QgZG90c1xyXG5cdGl0ZW1zQmVoYXZpb3IoZGlyZWN0aW9uVG9nZ2xlKSB7XHJcblx0XHRyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcclxuXHRcdFx0bGV0IHN0ZXAgPSAwXHJcblx0XHRcdGxldCBzdGFydEFuaW1hdGVcclxuXHJcblx0XHRcdGxldCBjYWxsYmFja0ZvckZvcndhcmRBbmltID0gKCkgPT4ge1xyXG5cdFx0XHRcdHRoaXMuaXRlbXNbdGhpcy5pdGVtc0NvdW50XS5zdHlsZS5hbmltYXRpb25OYW1lID0gJ25vbmUnXHJcblx0XHRcdFx0dGhpcy5pdGVtc1t0aGlzLml0ZW1zQ291bnRdLnN0eWxlLm1hcmdpbiA9IGAwcHggJHt0aGlzLmZpbmFsU2V0dGluZ3MubWFyZ2lufWBcclxuXHRcdFx0XHR0aGlzLml0ZW1zWzBdLnN0eWxlLmFuaW1hdGlvbk5hbWUgPSAnbm9uZSdcclxuXHRcdFx0XHR0aGlzLml0ZW1zWzBdLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcclxuXHRcdFx0XHR0aGlzLml0ZW1zWzBdLnN0eWxlLm1hcmdpbiA9IGAwcHggJHt0aGlzLmZpbmFsU2V0dGluZ3MubWFyZ2lufWBcclxuXHRcdFx0XHR0aGlzLml0ZW1zQ29udGFpbmVyLmFwcGVuZCh0aGlzLml0ZW1zWzBdKVxyXG5cdFx0XHRcdHN0ZXAgPSAwXHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGxldCBjYWxsYmFja0ZvckJhY2t3YXJkQW5pbSA9ICgpID0+IHtcclxuXHRcdFx0XHR0aGlzLml0ZW1zWzBdLnN0eWxlLmFuaW1hdGlvbk5hbWUgPSAnbm9uZSdcclxuXHRcdFx0XHR0aGlzLml0ZW1zWzBdLnN0eWxlLm1hcmdpbiA9IGAwcHggJHt0aGlzLmZpbmFsU2V0dGluZ3MubWFyZ2lufWBcclxuXHRcdFx0XHR0aGlzLml0ZW1zW3RoaXMuaXRlbXNDb3VudF0uc3R5bGUuYW5pbWF0aW9uTmFtZSA9ICdub25lJ1xyXG5cdFx0XHRcdHRoaXMuaXRlbXNbdGhpcy5pdGVtc0NvdW50XS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXHJcblx0XHRcdFx0dGhpcy5pdGVtc1t0aGlzLml0ZW1zQ291bnRdLnN0eWxlLm1hcmdpbiA9IGAwcHggJHt0aGlzLmZpbmFsU2V0dGluZ3MubWFyZ2lufWBcclxuXHRcdFx0XHR0aGlzLml0ZW1zQ29udGFpbmVyLnN0eWxlLnRleHRBbGlnbiA9ICdsZWZ0J1xyXG5cdFx0XHRcdHN0ZXAgPSAwXHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGxldCBmb3J3YXJkQW5pbSA9ICgpID0+IHtcclxuXHRcdFx0XHRzdGVwICs9IHRoaXMuc3RlcE9mQW5pbWF0aW9uXHJcblx0XHRcdFx0dGhpcy5pdGVtc1swXS5zdHlsZS5tYXJnaW5MZWZ0ID0gXCItXCIgKyBzdGVwICsgXCJweFwiXHJcblx0XHRcdFx0aWYgKHBhcnNlSW50KHRoaXMuaXRlbXNbMF0uc3R5bGUubWFyZ2luTGVmdCkgKiAtMSA+IE51bWJlcih0aGlzLndpZHRoSXRlbSkpIHtcclxuXHRcdFx0XHRcdGNsZWFySW50ZXJ2YWwoc3RhcnRBbmltYXRlKVxyXG5cdFx0XHRcdFx0Y2FsbGJhY2tGb3JGb3J3YXJkQW5pbSgpXHJcblx0XHRcdFx0XHRyZXNvbHZlKClcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGxldCBiYWNrd2FyZEFuaW0gPSAoKSA9PiB7XHJcblx0XHRcdFx0c3RlcCArPSB0aGlzLnN0ZXBPZkFuaW1hdGlvblxyXG5cdFx0XHRcdHRoaXMuaXRlbXNbdGhpcy5pdGVtc0NvdW50XS5zdHlsZS5tYXJnaW5SaWdodCA9IFwiLVwiICsgc3RlcCArIFwicHhcIlxyXG5cdFx0XHRcdGlmIChwYXJzZUludCh0aGlzLml0ZW1zW3RoaXMuaXRlbXNDb3VudF0uc3R5bGUubWFyZ2luUmlnaHQpICogLTEgPiBOdW1iZXIodGhpcy53aWR0aEl0ZW0pKSB7XHJcblx0XHRcdFx0XHRjbGVhckludGVydmFsKHN0YXJ0QW5pbWF0ZSlcclxuXHRcdFx0XHRcdGNhbGxiYWNrRm9yQmFja3dhcmRBbmltKClcclxuXHRcdFx0XHRcdHJlc29sdmUoKVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0aWYgKGRpcmVjdGlvblRvZ2dsZSkge1xyXG5cdFx0XHRcdHRoaXMuaXRlbXNbdGhpcy5pdGVtc0NvdW50XS5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZS1ibG9jaydcclxuXHRcdFx0XHR0aGlzLml0ZW1zW3RoaXMuaXRlbXNDb3VudF0uc3R5bGUubWFyZ2luUmlnaHQgPSBgLSR7TnVtYmVyKHRoaXMud2lkdGhJdGVtKX1weGBcclxuXHRcdFx0XHRzdGFydEFuaW1hdGUgPSBzZXRJbnRlcnZhbChmb3J3YXJkQW5pbSwgNSlcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlIHtcclxuXHRcdFx0XHR0aGlzLml0ZW1zW3RoaXMuaXRlbXMubGVuZ3RoIC0gMV0uc3R5bGUubWFyZ2luTGVmdCA9IGAtJHtOdW1iZXIodGhpcy53aWR0aEl0ZW0pfXB4YFxyXG5cdFx0XHRcdHRoaXMuaXRlbXNbdGhpcy5pdGVtcy5sZW5ndGggLSAxXS5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZS1ibG9jaydcclxuXHRcdFx0XHR0aGlzLml0ZW1zQ29udGFpbmVyLnByZXBlbmQodGhpcy5pdGVtc1t0aGlzLml0ZW1zLmxlbmd0aCAtIDFdKVxyXG5cdFx0XHRcdHRoaXMuaXRlbXNDb250YWluZXIuc3R5bGUudGV4dEFsaWduID0gJ3JpZ2h0J1xyXG5cdFx0XHRcdHN0YXJ0QW5pbWF0ZSA9IHNldEludGVydmFsKGJhY2t3YXJkQW5pbSwgNSlcclxuXHRcdFx0fVxyXG5cdFx0fSlcclxuXHJcblx0fVxyXG5cclxuXHQvL3NldHRpbmcgdGhpcy53aWR0aEl0ZW0gZm9yIHRoaXMuaXRlbXNCZWhhdmlvcihkaXJlY3Rpb25Ub2dnbGUpXHJcblx0c2V0V2lkdGhJdGVtKCkge1xyXG5cdFx0dGhpcy53aWR0aEl0ZW0gPSAodGhpcy5pdGVtc1swXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCArIHBhcnNlSW50KHRoaXMuaXRlbXNbMF0uc3R5bGUubWFyZ2luTGVmdCkpLnRvU3RyaW5nKClcclxuXHR9XHJcblxyXG5cdGNyZWF0ZUl0ZW1zKCkge1xyXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLml0ZW1zLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHRoaXMuaXRlbXNbaV0uc3R5bGUuZGlzcGxheSA9ICdub25lJ1xyXG5cdFx0fVxyXG5cclxuXHRcdGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5pdGVtc0NvdW50OyBpKyspIHtcclxuXHRcdFx0dGhpcy5pdGVtc1tpXS5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZS1ibG9jaydcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHNldElzRG90cyh3aWR0aE9mU2NyZWVuID0gdW5kZWZpbmVkKSB7XHJcblx0XHRpZiAod2lkdGhPZlNjcmVlbiAhPT0gdW5kZWZpbmVkKSB7XHJcblx0XHRcdGlmICh0aGlzLmZpbmFsU2V0dGluZ3MuYnJlYWtwb2ludHNbd2lkdGhPZlNjcmVlbl0uZG90cyAhPT0gdW5kZWZpbmVkKVxyXG5cdFx0XHRcdHRoaXMuaXNEb3RzID0gdGhpcy5maW5hbFNldHRpbmdzLmJyZWFrcG9pbnRzW3dpZHRoT2ZTY3JlZW5dLmRvdHNcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdHRoaXMuaXNEb3RzID0gdGhpcy5maW5hbFNldHRpbmdzLmRvdHNcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHNldEFyckFjdGl2ZURvdHMoKSB7XHJcblx0XHR0aGlzLmFyckFjdGl2ZURvdHMgPSBbMF1cclxuXHRcdGxldCB0b3RhbCA9IDBcclxuXHRcdGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5pdGVtcy5sZW5ndGg7IGkgKz0gdGhpcy5pdGVtc0NvdW50KSB7XHJcblx0XHRcdHRvdGFsICs9IHRoaXMuaXRlbXNDb3VudFxyXG5cdFx0XHRpZiAodG90YWwgPD0gdGhpcy5pdGVtcy5sZW5ndGggLSAxKVxyXG5cdFx0XHRcdHRoaXMuYXJyQWN0aXZlRG90cy5wdXNoKHRvdGFsKVxyXG5cdFx0fVxyXG5cclxuXHRcdGlmICh0aGlzLmFyckFjdGl2ZURvdHNbdGhpcy5hcnJBY3RpdmVEb3RzLmxlbmd0aCAtIDFdICE9PSB0aGlzLml0ZW1zLmxlbmd0aCAtIHRoaXMuaXRlbXNDb3VudCkge1xyXG5cdFx0XHR0aGlzLmFyckFjdGl2ZURvdHNbdGhpcy5hcnJBY3RpdmVEb3RzLmxlbmd0aCAtIDFdID0gdGhpcy5pdGVtcy5sZW5ndGggLSB0aGlzLml0ZW1zQ291bnRcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGRvdHNCZWhhdmlvcigpIHtcclxuXHRcdGlmICh0aGlzLmFyckFjdGl2ZURvdHMubGVuZ3RoID09PSAxKSB7XHJcblx0XHRcdHRoaXMuZG90c0NvbnRhaW5lci5jaGlsZE5vZGVzW3RoaXMuYWN0aXZlSXRlbUluZGV4XS5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuZmluYWxTZXR0aW5ncy5hY3RpdmVEb3RDbGFzcylcclxuXHRcdFx0dGhpcy5kb3RzQ29udGFpbmVyLmNoaWxkTm9kZXNbdGhpcy5hY3RpdmVJdGVtSW5kZXggKyAxXS5jbGFzc0xpc3QuYWRkKHRoaXMuZmluYWxTZXR0aW5ncy5hY3RpdmVEb3RDbGFzcylcclxuXHRcdH1cclxuXHRcdGVsc2Uge1xyXG5cdFx0XHRmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuYXJyQWN0aXZlRG90cy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHRcdGlmICh0aGlzLmFjdGl2ZUl0ZW1JbmRleCA9PT0gdGhpcy5hcnJBY3RpdmVEb3RzW2ldKSB7XHJcblx0XHRcdFx0XHRsZXQgY3VycmVudEFjdGl2ZURvdCA9IHRoaXMuZG90c0NvbnRhaW5lci5xdWVyeVNlbGVjdG9yKFwiLlwiICsgdGhpcy5maW5hbFNldHRpbmdzLmFjdGl2ZURvdENsYXNzKVxyXG5cdFx0XHRcdFx0bGV0IGFjdGl2ZUluZGV4ID0gdGhpcy5hcnJBY3RpdmVEb3RzLmluZGV4T2YodGhpcy5hcnJBY3RpdmVEb3RzW2ldKVxyXG5cdFx0XHRcdFx0Y3VycmVudEFjdGl2ZURvdC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuZmluYWxTZXR0aW5ncy5hY3RpdmVEb3RDbGFzcylcclxuXHRcdFx0XHRcdHRoaXMuZG90c0NvbnRhaW5lci5jaGlsZE5vZGVzW2FjdGl2ZUluZGV4XS5jbGFzc0xpc3QuYWRkKHRoaXMuZmluYWxTZXR0aW5ncy5hY3RpdmVEb3RDbGFzcylcclxuXHRcdFx0XHRcdHJldHVybiBmYWxzZVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmVtb3ZlRG90cygpIHtcclxuXHRcdGlmICh0aGlzLmlzTm9kZSh0aGlzLmRvdHNDb250YWluZXIpKSB7XHJcblx0XHRcdHdoaWxlICh0aGlzLmRvdHNDb250YWluZXIuZmlyc3RDaGlsZCkge1xyXG5cdFx0XHRcdHRoaXMuZG90c0NvbnRhaW5lci5maXJzdENoaWxkLnJlbW92ZSgpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRjcmVhdGVEb3RzKCkge1xyXG5cdFx0dGhpcy5yZW1vdmVEb3RzKClcclxuXHJcblx0XHRsZXQgZG90c0NvdW50XHJcblx0XHRpZiAodHlwZW9mICh0aGlzLml0ZW1zQ291bnQpICE9PSBcIm51bWJlclwiKVxyXG5cdFx0XHRyZXR1cm4gZmFsc2VcclxuXHRcdGVsc2VcclxuXHRcdFx0ZG90c0NvdW50ID0gTWF0aC5jZWlsKHRoaXMuaXRlbXMubGVuZ3RoIC8gdGhpcy5pdGVtc0NvdW50KVxyXG5cclxuXHRcdGZvciAobGV0IGkgPSAwOyBpIDwgZG90c0NvdW50OyBpKyspXHJcblx0XHRcdHRoaXMuZG90c0NvbnRhaW5lci5hcHBlbmQodGhpcy5leGFtcGxlT2ZEb3QuY2xvbmVOb2RlKHRydWUpKVxyXG5cclxuXHRcdGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5hcnJBY3RpdmVEb3RzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdGlmICh0aGlzLmFjdGl2ZUl0ZW1JbmRleCA8IHRoaXMuYXJyQWN0aXZlRG90c1tpXSkge1xyXG5cdFx0XHRcdHRoaXMuZG90c0NvbnRhaW5lci5jaGlsZHJlbltpIC0gMV0uY2xhc3NMaXN0LmFkZCh0aGlzLmZpbmFsU2V0dGluZ3MuYWN0aXZlRG90Q2xhc3MpXHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlXHJcblx0XHRcdH0gZWxzZSBpZiAodGhpcy5hY3RpdmVJdGVtSW5kZXggPT0gdGhpcy5hcnJBY3RpdmVEb3RzW2ldKSB7XHJcblx0XHRcdFx0dGhpcy5kb3RzQ29udGFpbmVyLmNoaWxkcmVuW2ldLmNsYXNzTGlzdC5hZGQodGhpcy5maW5hbFNldHRpbmdzLmFjdGl2ZURvdENsYXNzKVxyXG5cdFx0XHRcdHJldHVybiBmYWxzZVxyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2UgaWYgKHRoaXMuYWN0aXZlSW5kZXggPT0gMCB8fCB0aGlzLmFjdGl2ZUluZGV4ID4gdGhpcy5hcnJBY3RpdmVEb3RzLmxlbmd0aCAtIDEpIHtcclxuXHRcdFx0XHR0aGlzLmRvdHNDb250YWluZXIuZmlyc3RDaGlsZC5jbGFzc0xpc3QuYWRkKHRoaXMuZmluYWxTZXR0aW5ncy5hY3RpdmVEb3RDbGFzcylcclxuXHRcdFx0XHRyZXR1cm4gZmFsc2VcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0ZG90Q2xpY2sgPSBhc3luYyAoaW5kKSA9PiB7XHJcblxyXG5cdFx0bGV0IGNvdW50U3RlcFRvID0gdGhpcy5hY3RpdmVJdGVtSW5kZXggLSB0aGlzLmFyckFjdGl2ZURvdHNbaW5kXVxyXG5cclxuXHRcdGlmIChjb3VudFN0ZXBUbyA8IDApIHtcclxuXHJcblx0XHRcdGlmICh0aGlzLnN0YWNrTmV4dCA9PT0gMCAmJiB0aGlzLnN0YWNrUHJldiA9PT0gMCkge1xyXG5cdFx0XHRcdHRoaXMuc3RhY2tOZXh0ID0gKGNvdW50U3RlcFRvKSAqIC0xXHJcblx0XHRcdFx0dGhpcy5zdGFja1dhdGNoZXIoKVxyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2UgaWYgKHRoaXMuc3RhY2tOZXh0ICE9PSAwKVxyXG5cdFx0XHRcdHRoaXMuc3RhY2tOZXh0ID0gKGNvdW50U3RlcFRvKSAqIC0xXHJcblx0XHRcdGVsc2UgaWYgKHRoaXMuc3RhY2tQcmV2ICE9PSAwKVxyXG5cdFx0XHRcdHRoaXMuc3RhY2tOZXh0ID0gKGNvdW50U3RlcFRvIC0gMSkgKiAtMVxyXG5cclxuXHRcdFx0aWYgKHRoaXMuc3RhY2tQcmV2ICE9PSAwKVxyXG5cdFx0XHRcdHRoaXMuc3RhY2tQcmV2ID0gMVxyXG5cdFx0fVxyXG5cdFx0ZWxzZSB7XHJcblxyXG5cdFx0XHRpZiAodGhpcy5zdGFja1ByZXYgPT09IDAgJiYgdGhpcy5zdGFja05leHQgPT09IDApIHtcclxuXHRcdFx0XHR0aGlzLnN0YWNrUHJldiA9IGNvdW50U3RlcFRvXHJcblx0XHRcdFx0dGhpcy5zdGFja1dhdGNoZXIoKVxyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2UgaWYgKHRoaXMuc3RhY2tQcmV2ICE9PSAwKVxyXG5cdFx0XHRcdHRoaXMuc3RhY2tQcmV2ID0gY291bnRTdGVwVG9cclxuXHRcdFx0ZWxzZSBpZiAodGhpcy5zdGFja05leHQgIT09IDApXHJcblx0XHRcdFx0dGhpcy5zdGFja1ByZXYgPSBjb3VudFN0ZXBUbyArIDFcclxuXHJcblx0XHRcdGlmICh0aGlzLnN0YWNrTmV4dCAhPT0gMClcclxuXHRcdFx0XHR0aGlzLnN0YWNrTmV4dCA9IDFcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHNldEV2ZW50TGlzdGVuZXJGb3JEb3RzKCkge1xyXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmRvdHNDb250YWluZXIuY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0dGhpcy5kb3RzQ29udGFpbmVyLmNoaWxkcmVuW2ldLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5kb3RDbGljay5iaW5kKHRoaXMsIGkpKVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Ly9mb3IgZ2V0QnJlYWtQb2ludCgpXHJcblx0Z2V0UmVzcG9uc2l2ZU1hcCgpIHtcclxuXHRcdHJldHVybiBPYmplY3Qua2V5cyh0aGlzLmZpbmFsU2V0dGluZ3MuYnJlYWtwb2ludHMpXHJcblx0fVxyXG5cclxuXHQvL2ZvciBnZXR0aW5nIHRoZSBhY3R1YWwgd2lkdGhcclxuXHRnZXRCcmVha1BvaW50KCkge1xyXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnJlc3BvbnNpdmVNYXAubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0aWYgKE51bWJlcih0aGlzLnJlc3BvbnNpdmVNYXBbaV0pID4gd2luZG93LmlubmVyV2lkdGgpIHtcclxuXHRcdFx0XHRyZXR1cm4gdGhpcy5yZXNwb25zaXZlTWFwW2ldXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGNyZWF0ZVNsaWRlcigpIHtcclxuXHRcdC8vdGhpcy5wcmVwYXJpbmdJdGVtc0NvbnRhaW5lcigpXHJcblxyXG5cdFx0aWYgKHRoaXMuaXNSZXNwb25zaXZlKCkpIHtcclxuXHRcdFx0bGV0IGJyZWFrUG9pbnQgPSB0aGlzLmdldEJyZWFrUG9pbnQoKVxyXG5cdFx0XHR0aGlzLnNldEl0ZW1zQ291bnQodHJ1ZSwgYnJlYWtQb2ludClcclxuXHRcdFx0dGhpcy5zZXRJc0RvdHMoYnJlYWtQb2ludClcclxuXHRcdFx0dGhpcy5zZXRBcnJBY3RpdmVEb3RzKClcclxuXHRcdFx0dGhpcy5zZXRJc05hdihicmVha1BvaW50KVxyXG5cdFx0fVxyXG5cdFx0ZWxzZSB7XHJcblx0XHRcdHRoaXMuc2V0SXRlbXNDb3VudChmYWxzZSlcclxuXHRcdFx0dGhpcy5zZXRBcnJBY3RpdmVEb3RzKClcclxuXHRcdFx0dGhpcy5zZXRJc0RvdHMoKVxyXG5cdFx0XHR0aGlzLnNldElzTmF2KClcclxuXHRcdH1cclxuXHJcblx0XHRpZiAodGhpcy5pc0RvdHMpIHtcclxuXHRcdFx0dGhpcy5jcmVhdGVEb3RzKClcclxuXHRcdFx0dGhpcy5zZXRFdmVudExpc3RlbmVyRm9yRG90cygpXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHRcdHRoaXMucmVtb3ZlRG90cygpXHJcblxyXG5cdFx0dGhpcy5wcmVwYXJpbmdJdGVtcygpXHJcblx0XHR0aGlzLmNyZWF0ZUl0ZW1zKClcclxuXHRcdHRoaXMuc2V0V2lkdGhJdGVtKClcclxuXHRcdHRoaXMuc2V0U3RlcE9mQW5pbWF0aW9uKClcclxuXHR9XHJcblxyXG5cdGFzeW5jIHNsaWRlV2l0aExvb3AoZGlyZWN0aW9uVG9nZ2xlKSB7XHJcblx0XHQvL2RpcmVjdGlvbjogbmV4dC4gXHJcblx0XHRpZiAoZGlyZWN0aW9uVG9nZ2xlKSB7XHJcblx0XHRcdGF3YWl0IHRoaXMuaXRlbXNCZWhhdmlvcihkaXJlY3Rpb25Ub2dnbGUpXHJcblxyXG5cdFx0XHQvL2RvdHMgYmVoYXZpb3ItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblx0XHRcdGlmICgodGhpcy5hY3RpdmVJdGVtSW5kZXggKyAxKSA8IHRoaXMuaXRlbXMubGVuZ3RoKSB7XHJcblx0XHRcdFx0dGhpcy5hY3RpdmVJdGVtSW5kZXgrK1xyXG5cdFx0XHRcdGlmICh0aGlzLmlzRG90cylcclxuXHRcdFx0XHRcdHRoaXMuZG90c0JlaGF2aW9yKClcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlIHtcclxuXHRcdFx0XHR0aGlzLmFjdGl2ZUl0ZW1JbmRleCA9IDBcclxuXHRcdFx0XHRpZiAodGhpcy5pc0RvdHMpXHJcblx0XHRcdFx0XHR0aGlzLmRvdHNCZWhhdmlvcigpXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdC8vZGlyZWN0aW9uOiBwcmV2XHJcblx0XHRlbHNlIHtcclxuXHRcdFx0YXdhaXQgdGhpcy5pdGVtc0JlaGF2aW9yKGRpcmVjdGlvblRvZ2dsZSlcclxuXHJcblx0XHRcdC8vZG90cyBiZWhhdmlvci0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHRcdFx0aWYgKCh0aGlzLmFjdGl2ZUl0ZW1JbmRleCAtIDEpID4gLTEpIHtcclxuXHRcdFx0XHR0aGlzLmFjdGl2ZUl0ZW1JbmRleC0tXHJcblx0XHRcdFx0aWYgKHRoaXMuaXNEb3RzKVxyXG5cdFx0XHRcdFx0dGhpcy5kb3RzQmVoYXZpb3IoKVxyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2Uge1xyXG5cdFx0XHRcdHRoaXMuYWN0aXZlSXRlbUluZGV4ID0gdGhpcy5pdGVtcy5sZW5ndGggLSAxXHJcblx0XHRcdFx0aWYgKHRoaXMuaXNEb3RzKVxyXG5cdFx0XHRcdFx0dGhpcy5kb3RzQmVoYXZpb3IoKVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRhc3luYyBzbGlkZVdpdGhvdXRMb29wKGRpcmVjdGlvblRvZ2dsZSkge1xyXG5cdFx0aWYgKGRpcmVjdGlvblRvZ2dsZSkge1xyXG5cdFx0XHRpZiAoKHRoaXMuYWN0aXZlSXRlbUluZGV4ICsgdGhpcy5pdGVtc0NvdW50KSA8PSB0aGlzLml0ZW1zLmxlbmd0aCAtIDEpIHtcclxuXHRcdFx0XHRhd2FpdCB0aGlzLml0ZW1zQmVoYXZpb3IoZGlyZWN0aW9uVG9nZ2xlLCAwLCB0aGlzLml0ZW1zQ291bnQpXHJcblx0XHRcdFx0dGhpcy5hY3RpdmVJdGVtSW5kZXgrK1xyXG5cclxuXHRcdFx0XHRpZiAodGhpcy5pc0RvdHMpXHJcblx0XHRcdFx0XHR0aGlzLmRvdHNCZWhhdmlvcigpXHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHRcdHJldHVybiBmYWxzZVxyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZiAoKHRoaXMuYWN0aXZlSXRlbUluZGV4IC0gMSkgPj0gMCkge1xyXG5cdFx0XHRhd2FpdCB0aGlzLml0ZW1zQmVoYXZpb3IoZGlyZWN0aW9uVG9nZ2xlLCB0aGlzLml0ZW1zQ291bnQgLSAxLCB0aGlzLml0ZW1zLmxlbmd0aCAtIDEpXHJcblx0XHRcdHRoaXMuYWN0aXZlSXRlbUluZGV4LS1cclxuXHRcdFx0aWYgKHRoaXMuaXNEb3RzKVxyXG5cdFx0XHRcdHRoaXMuZG90c0JlaGF2aW9yKClcclxuXHRcdH1cclxuXHRcdGVsc2VcclxuXHRcdFx0cmV0dXJuIGZhbHNlXHJcblx0fVxyXG5cclxuXHRidG5OZXh0Q2xpY2sgPSBhc3luYyAoKSA9PiB7XHJcblx0XHRpZiAodGhpcy5maW5hbFNldHRpbmdzLmxvb3ApXHJcblx0XHRcdGF3YWl0IHRoaXMuc2xpZGVXaXRoTG9vcCh0cnVlKVxyXG5cdFx0ZWxzZVxyXG5cdFx0XHRhd2FpdCB0aGlzLnNsaWRlV2l0aG91dExvb3AodHJ1ZSlcclxuXHR9XHJcblxyXG5cdGJ0blByZXZDbGljayA9IGFzeW5jICgpID0+IHtcclxuXHRcdGlmICh0aGlzLmZpbmFsU2V0dGluZ3MubG9vcClcclxuXHRcdFx0YXdhaXQgdGhpcy5zbGlkZVdpdGhMb29wKGZhbHNlKVxyXG5cdFx0ZWxzZVxyXG5cdFx0XHRhd2FpdCB0aGlzLnNsaWRlV2l0aG91dExvb3AoZmFsc2UpXHJcblx0fVxyXG5cclxuXHRnZXRGaXJzdFRvdWNoID0gKGUpID0+IHtcclxuXHRcdHRoaXMuaXRlbXNDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCB0aGlzLmdldFRvdWNoRW5kKVxyXG5cdFx0dGhpcy5maXJzdFRvdWNoWCA9IGUudG91Y2hlc1swXS5jbGllbnRYXHJcblx0XHR0aGlzLmZpcnN0VG91Y2hZID0gZS50b3VjaGVzWzBdLmNsaWVudFlcclxuXHRcdHRoaXMuaXRlbXNDb250YWluZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIHRoaXMuZ2V0Rmlyc3RUb3VjaClcclxuXHR9XHJcblxyXG5cdGdldFRvdWNoRW5kID0gYXN5bmMgKGUpID0+IHtcclxuXHRcdHRoaXMuaXRlbXNDb250YWluZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCB0aGlzLmdldFRvdWNoRW5kKVxyXG5cdFx0bGV0IGRpcmVjdGlvbiA9IChNYXRoLmFicyh0aGlzLmZpcnN0VG91Y2hYIC0gZS5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRYKSA+IE1hdGguYWJzKHRoaXMuZmlyc3RUb3VjaFkgLSBlLmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFkpKVxyXG5cclxuXHRcdGlmIChkaXJlY3Rpb24pXHJcblx0XHRcdGlmICh0aGlzLmZpcnN0VG91Y2hYID4gZS5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRYKVxyXG5cdFx0XHRcdGF3YWl0IHRoaXMuYnRuTmV4dENsaWNrKClcclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHRcdGF3YWl0IHRoaXMuYnRuUHJldkNsaWNrKClcclxuXHJcblx0XHR0aGlzLml0ZW1zQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCB0aGlzLmdldEZpcnN0VG91Y2gpXHJcblx0fVxyXG5cclxuXHRhc3luYyBzdGFja1dhdGNoZXIoKSB7XHJcblx0XHRpZiAodGhpcy5zdGFja05leHQgPiAwKSB7XHJcblx0XHRcdGF3YWl0IHRoaXMuYnRuTmV4dENsaWNrKClcclxuXHRcdFx0dGhpcy5zdGFja05leHQtLVxyXG5cdFx0XHR0aGlzLnN0YWNrV2F0Y2hlcigpXHJcblx0XHR9IGVsc2UgaWYgKHRoaXMuc3RhY2tQcmV2ID4gMCkge1xyXG5cdFx0XHRhd2FpdCB0aGlzLmJ0blByZXZDbGljaygpXHJcblx0XHRcdHRoaXMuc3RhY2tQcmV2LS1cclxuXHRcdFx0dGhpcy5zdGFja1dhdGNoZXIoKVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0c2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcblx0XHRpZiAodGhpcy5maW5hbFNldHRpbmdzLnJlc3BvbnNpdmUpIHtcclxuXHRcdFx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsICgpID0+IHtcclxuXHRcdFx0XHR0aGlzLmNyZWF0ZVNsaWRlcigpXHJcblx0XHRcdH0pXHJcblx0XHR9XHJcblxyXG5cdFx0dGhpcy5pdGVtc0NvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgdGhpcy5nZXRGaXJzdFRvdWNoKVxyXG5cdFx0dGhpcy5pdGVtc0NvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIHRoaXMuZ2V0VG91Y2hFbmQpXHJcblxyXG5cdFx0Ly90byBub3QgZ2l2ZSBhIGZhdGFsIGVycm9yLiBUaGVyZSBpcyB0aGUgdmFsaWRhdGlvbk9mVGhlSW5wdXRPYmplY3Qgcm9yIGNoZWNraW5nIHRoZSBpbnB1dCBvYmplY3RcclxuXHRcdGlmICh0aGlzLmlzTm9kZSh0aGlzLmJ0bk5leHQpICYmIHRoaXMuaXNOb2RlKHRoaXMuYnRuUHJldikpIHtcclxuXHRcdFx0dGhpcy5idG5OZXh0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG5cdFx0XHRcdHRoaXMuc3RhY2tOZXh0KytcclxuXHRcdFx0XHRpZiAodGhpcy5zdGFja05leHQgPT09IDEgJiYgdGhpcy5zdGFja1ByZXYgPT09IDApIHtcclxuXHRcdFx0XHRcdHRoaXMuc3RhY2tXYXRjaGVyKClcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGlmICh0aGlzLnN0YWNrUHJldiAhPT0gMClcclxuXHRcdFx0XHRcdHRoaXMuc3RhY2tQcmV2ID0gMVxyXG5cdFx0XHR9KVxyXG5cclxuXHRcdFx0dGhpcy5idG5QcmV2LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG5cdFx0XHRcdHRoaXMuc3RhY2tQcmV2KytcclxuXHRcdFx0XHRpZiAodGhpcy5zdGFja1ByZXYgPT09IDEgJiYgdGhpcy5zdGFja05leHQgPT09IDApIHtcclxuXHRcdFx0XHRcdHRoaXMuc3RhY2tXYXRjaGVyKClcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGlmICh0aGlzLnN0YWNrTmV4dCAhPT0gMClcclxuXHRcdFx0XHRcdHRoaXMuc3RhY2tOZXh0ID0gMVxyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0dmFsaWRhdGlvbk9mVGhlSW5wdXRPYmplY3Qoc2V0dGluZ3MpIHtcclxuXHRcdGxldCB2YWxpZGF0ZU5hdiA9ICgpID0+IHtcclxuXHRcdFx0aWYgKHR5cGVvZiBzZXR0aW5ncy5idG5OZXh0ICE9PSAnc3RyaW5nJyB8fCAhdGhpcy5pc05vZGUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZXR0aW5ncy5idG5OZXh0KSkpXHJcblx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKCdUeXBlIG9mIGJ0bk5leHQgbXVzdCBiZSBhIHN0cmluZy4gVGhlIGV4YW1wbGU6IGJ0bk5leHQ6IFwiLnNvbWVTZWN0aW9uIC5zb21lV3JhcHBlciAuc29tZUNsYXNzXCInKVxyXG5cdFx0XHRpZiAodHlwZW9mIHNldHRpbmdzLmJ0blByZXYgIT09ICdzdHJpbmcnIHx8ICF0aGlzLmlzTm9kZShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNldHRpbmdzLmJ0blByZXYpKSlcclxuXHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ1R5cGUgb2YgYnRuUHJldiBtdXN0IGJlIGEgc3RyaW5nLiBUaGUgZXhhbXBsZTogYnRuUHJldjogXCIuc29tZVNlY3Rpb24gLnNvbWVXcmFwcGVyIC5zb21lQ2xhc3NcIicpXHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKHR5cGVvZiBzZXR0aW5ncyAhPT0gJ29iamVjdCcpXHJcblx0XHRcdHRocm93IG5ldyBFcnJvcignWW91ciBvcHRpb25zIG11c3QgYmUgYW4gb2JqZWN0LiBUaGUgZXhhbXBsZTogbmV3IEduYXRpdmVTbGlkZXIoe2l0ZW1zQ29udGFpbmVyOiBcIi5zb21lU2VjdGlvbiAuc29tZVdyYXBwZXIgLnNvbWVDbGFzc1wifSknKVxyXG5cdFx0aWYgKHR5cGVvZiBzZXR0aW5ncy5pdGVtc0NvbnRhaW5lciAhPT0gJ3N0cmluZycgfHwgIXRoaXMuaXNOb2RlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2V0dGluZ3MuaXRlbXNDb250YWluZXIpKSlcclxuXHRcdFx0dGhyb3cgbmV3IEVycm9yKCdpdGVtc0NvbnRhaW5lciBpcyBhIHJlcXVpcmVkIGZpZWxkLiBUeXBlIG9mIGl0ZW1zQ29udGFpbmVyIG11c3QgYmUgYSBzdHJpbmcuIFRoZSBleGFtcGxlOiBpdGVtc0NvbnRhaW5lcjogXCIuc29tZVNlY3Rpb24gLnNvbWVXcmFwcGVyIC5zb21lQ2xhc3NcIicpXHJcblx0XHRpZiAoc2V0dGluZ3MubmF2ID09PSB0cnVlKVxyXG5cdFx0XHR2YWxpZGF0ZU5hdigpXHJcblx0XHRpZiAodHlwZW9mIHNldHRpbmdzLmRvdHNDb250YWluZXIgIT09ICdzdHJpbmcnIHx8ICF0aGlzLmlzTm9kZShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNldHRpbmdzLmRvdHNDb250YWluZXIpKSlcclxuXHRcdFx0dGhyb3cgbmV3IEVycm9yKCdkb3RzQ29udGFpbmVyIGlzIGEgcmVxdWlyZWQgZmllbGQuIFR5cGUgb2YgZG90c0NvbnRhaW5lciBtdXN0IGJlIGEgc3RyaW5nLiBUaGUgZXhhbXBsZTogZG90c0NvbnRhaW5lcjogXCIuc29tZVNlY3Rpb24gLnNvbWVXcmFwcGVyIC5zb21lQ2xhc3NcIicpXHJcblx0XHRpZiAodHlwZW9mIHNldHRpbmdzLmV4YW1wbGVPZkRvdCAhPT0gJ3N0cmluZycgfHwgIXRoaXMuaXNOb2RlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2V0dGluZ3MuZXhhbXBsZU9mRG90KSkpXHJcblx0XHRcdHRocm93IG5ldyBFcnJvcignZXhhbXBsZU9mRG90IGlzIGEgcmVxdWlyZWQgZmllbGQuIFR5cGUgb2YgZXhhbXBsZU9mRG90IG11c3QgYmUgYSBzdHJpbmcuIFRoZSBleGFtcGxlOiBleGFtcGxlT2ZEb3Q6IFwiLnNvbWVTZWN0aW9uIC5zb21lV3JhcHBlciAuc29tZUNsYXNzXCInKVxyXG5cdFx0aWYgKHR5cGVvZiBzZXR0aW5ncy5hY3RpdmVEb3RDbGFzcyAhPT0gJ3N0cmluZycpXHJcblx0XHRcdHRocm93IG5ldyBFcnJvcignYWN0aXZlRG90Q2xhc3MgaXMgYSByZXF1aXJlZCBmaWVsZC4gVHlwZSBvZiBhY3RpdmVEb3RDbGFzcyBtdXN0IGJlIGEgc3RyaW5nLiBUaGUgZXhhbXBsZTogYWN0aXZlRG90Q2xhc3M6IFwieW91ckFjdGl2ZURvdENsYXNzXCInKVxyXG5cdFx0aWYgKCdsb29wJyBpbiBzZXR0aW5ncylcclxuXHRcdFx0aWYgKHR5cGVvZiBzZXR0aW5ncy5sb29wICE9PSAnYm9vbGVhbicpXHJcblx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKCdsb29wIGlzIG5vdCBhIHJlcXVpcmVkIGZpZWxkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyB0cnVlLiBUeXBlIG9mIGxvb3AgbXVzdCBiZSBhIGJvb2xlYW4uIFRoZSBleGFtcGxlOiBsb29wOiBmYWxzZScpXHJcblx0XHRpZiAoJ2FuaW1hdGlvblRpbWUnIGluIHNldHRpbmdzKVxyXG5cdFx0XHRpZiAodHlwZW9mIHNldHRpbmdzLmFuaW1hdGlvblRpbWUgIT09ICdudW1iZXInKVxyXG5cdFx0XHRcdHRocm93IG5ldyBFcnJvcignYW5pbWF0aW9uVGltZSBpcyBub3QgYSByZXF1aXJlZCBmaWVsZC4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgMjAwIG1zLiBUeXBlIG9mIGxvb3AgbXVzdCBiZSBhIG51bWJlci4gVGhlIGV4YW1wbGU6IGFuaW1hdGlvblRpbWU6IDIwMCcpXHJcblx0XHRpZiAoJ21hcmdpbicgaW4gc2V0dGluZ3MpXHJcblx0XHRcdGlmICh0eXBlb2Ygc2V0dGluZ3MubWFyZ2luICE9PSAnc3RyaW5nJylcclxuXHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ21hcmdpbiBpcyBub3QgYSByZXF1aXJlZCBmaWVsZC4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgNXB4LiBBbHNvIG1hcmdpbiBjYW4gb25seSBiZSBpbiBwaXhlbHMuIFR5cGUgb2YgbWFyZ2luIG11c3QgYmUgYSBzdHJpbmcuIFRoZSBleGFtcGxlOiBtYXJnaW46IFwiNXB4XCInKVxyXG5cdFx0aWYgKCduYXYnIGluIHNldHRpbmdzKVxyXG5cdFx0XHRpZiAodHlwZW9mIHNldHRpbmdzLm5hdiAhPT0gJ2Jvb2xlYW4nKVxyXG5cdFx0XHRcdHRocm93IG5ldyBFcnJvcignbmF2IGlzIG5vdCBhIHJlcXVpcmVkIGZpZWxkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyB0cnVlLiBUeXBlIG9mIG5hdiBtdXN0IGJlIGEgYm9vbGVhbi4gVGhlIGV4YW1wbGU6IG5hdjogdHJ1ZScpXHJcblx0XHRpZiAoJ2RvdHMnIGluIHNldHRpbmdzKVxyXG5cdFx0XHRpZiAodHlwZW9mIHNldHRpbmdzLmRvdHMgIT09ICdib29sZWFuJylcclxuXHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ2RvdHMgaXMgbm90IGEgcmVxdWlyZWQgZmllbGQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIHRydWUuIFR5cGUgb2YgZG90cyBtdXN0IGJlIGEgYm9vbGVhbi4gVGhlIGV4YW1wbGU6IGRvdHM6IHRydWUnKVxyXG5cdFx0aWYgKCdpdGVtc0NvdW50JyBpbiBzZXR0aW5ncylcclxuXHRcdFx0aWYgKHR5cGVvZiBzZXR0aW5ncy5pdGVtc0NvdW50ICE9PSAnbnVtYmVyJylcclxuXHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ2l0ZW1zQ291bnQgaXMgbm90IGEgcmVxdWlyZWQgZmllbGQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIDEuIFR5cGUgb2YgaXRlbXNDb3VudCBtdXN0IGJlIGEgbnVtYmVyLiBUaGUgZXhhbXBsZTogaXRlbXNDb3VudDogMScpXHJcblx0XHRpZiAoJ3Jlc3BvbnNpdmUnIGluIHNldHRpbmdzKVxyXG5cdFx0XHRpZiAodHlwZW9mIHNldHRpbmdzLnJlc3BvbnNpdmUgIT09ICdib29sZWFuJylcclxuXHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ3Jlc3BvbnNpdmUgaXMgbm90IGEgcmVxdWlyZWQgZmllbGQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGZhbHNlLiBUeXBlIG9mIHJlc3BvbnNpdmUgbXVzdCBiZSBhIGJvb2xlYW4uIFRoZSBleGFtcGxlOiByZXNwb25zaXZlOiB0cnVlJylcclxuXHRcdGlmICgnYnJlYWtwb2ludHMnIGluIHNldHRpbmdzKSB7XHJcblx0XHRcdGZvciAobGV0IGtleSBpbiBzZXR0aW5ncy5icmVha3BvaW50cykge1xyXG5cdFx0XHRcdC8vY2hlY2sgb2YgdGhlIGtleVxyXG5cdFx0XHRcdGlmICh0eXBlb2Yga2V5ICE9PSAnc3RyaW5nJylcclxuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcignVHlwZSBvZiBrZXkgb2YgYnJlYWtwb2ludHMgbXVzdCBiZSBhIHN0cmluZy4gVGhlIGV4YW1wbGU6IGJyZWFrcG9pbnRzOiBcIjExMDBcIjoge2RvdHM6IHRydWUsIG5hdjogdHJ1ZX0nKVxyXG5cdFx0XHRcdGlmIChpc05hTihOdW1iZXIoa2V5KSkpXHJcblx0XHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ2tleSBvZiBicmVha3BvaW50cyBtdXN0IGJlIGEgbnVtYmVyIGJ1dCByZXByZXNlbnRlZCBhcyBhIHN0cmluZy4gVGhlIGV4YW1wbGU6IGJyZWFrcG9pbnRzOiBcIjExMDBcIjoge2RvdHM6IHRydWUsIG5hdjogdHJ1ZX0nKVxyXG5cdFx0XHRcdGlmICh0eXBlb2Ygc2V0dGluZ3MuYnJlYWtwb2ludHNba2V5XSAhPT0gXCJvYmplY3RcIikge1xyXG5cdFx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKCdrZXlzIG9mIGJyZWFrcG9pbnRzIG11c3QgY29udGFpbnMgb2JqZWN0cy4gVGhlIGV4YW1wbGU6IGJyZWFrcG9pbnRzOiBcIjExMDBcIjoge2RvdHM6IHRydWUsIG5hdjogdHJ1ZX0sIFwiOTYwXCI6IHtkb3RzOiBmYWxzZSwgbmF2OiB0cnVlfScpXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdC8vY2hlY2sgb2YgdGhlIG9iamVjdCBpbnNpZGUgdGhlIGtleVxyXG5cdFx0XHRcdGVsc2Uge1xyXG5cdFx0XHRcdFx0aWYgKCdpdGVtc0NvdW50JyBpbiBzZXR0aW5ncy5icmVha3BvaW50c1trZXldKSB7XHJcblx0XHRcdFx0XHRcdGlmICh0eXBlb2Ygc2V0dGluZ3MuYnJlYWtwb2ludHNba2V5XS5pdGVtc0NvdW50ICE9PSAnbnVtYmVyJylcclxuXHRcdFx0XHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ0Vycm9yIGluIGJyZWFrcG9pbnRzLicgKyBrZXkgKyAnLiBUeXBlIG9mIGl0ZW1zQ291bnQgbXVzdCBiZSBhIG51bWJlci4gVGhlIGV4YW1wbGU6IGl0ZW1zQ291bnQ6IDEnKVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcignaXRlbXNDb3VudCBpbiBicmVha3BvaW50cyBpcyBhIHJlcXVpcmVkIGZpZWxkLiBUeXBlIG9mIGl0ZW1zQ291bnQgbXVzdCBiZSBhIG51bWJlci4gVGhlIGV4YW1wbGU6IGl0ZW1zQ291bnQ6IDEnKVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0aWYgKCdkb3RzJyBpbiBzZXR0aW5ncy5icmVha3BvaW50c1trZXldKSB7XHJcblx0XHRcdFx0XHRcdGlmICh0eXBlb2Ygc2V0dGluZ3MuYnJlYWtwb2ludHNba2V5XS5kb3RzICE9PSAnYm9vbGVhbicpXHJcblx0XHRcdFx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKCdFcnJvciBpbiBicmVha3BvaW50cy4nICsga2V5ICsgJy4gVHlwZSBvZiBkb3RzIG11c3QgYmUgYSBib29sZWFuLiBUaGUgZXhhbXBsZTogZG90czogdHJ1ZScpXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRlbHNlIHtcclxuXHRcdFx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKCdkb3RzIGluIGJyZWFrcG9pbnRzIGlzIGEgcmVxdWlyZWQgZmllbGQuIFR5cGUgb2YgZG90cyBtdXN0IGJlIGEgYm9vbGVhbi4gVGhlIGV4YW1wbGU6IGRvdHM6IHRydWUnKVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0aWYgKCduYXYnIGluIHNldHRpbmdzLmJyZWFrcG9pbnRzW2tleV0pIHtcclxuXHRcdFx0XHRcdFx0aWYgKHR5cGVvZiBzZXR0aW5ncy5icmVha3BvaW50c1trZXldLm5hdiAhPT0gJ2Jvb2xlYW4nKVxyXG5cdFx0XHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcignRXJyb3IgaW4gYnJlYWtwb2ludHMuJyArIGtleSArICcuIFR5cGUgb2YgbmF2IG11c3QgYmUgYSBib29sZWFuLiBUaGUgZXhhbXBsZTogbmF2OiB0cnVlJylcclxuXHRcdFx0XHRcdFx0ZWxzZSBpZiAoc2V0dGluZ3MuYnJlYWtwb2ludHNba2V5XS5uYXYpXHJcblx0XHRcdFx0XHRcdFx0dmFsaWRhdGVOYXYoKVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcignZG90cyBpbiBicmVha3BvaW50cyBpcyBhIHJlcXVpcmVkIGZpZWxkLiBUeXBlIG9mIG5hdiBtdXN0IGJlIGEgYm9vbGVhbi4gVGhlIGV4YW1wbGU6IG5hdjogdHJ1ZScpXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG59Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7OztBQUNBO0FBQUE7QUFDQTtBQURBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUErVEE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUtBO0FBRUE7QUFHQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFLQTtBQUVBO0FBQ0E7QUFoQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQWhVQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQTRjQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQTdjQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBbWRBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBcGRBO0FBMmRBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFoZUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBaWVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUhBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBVUE7QUFDQTtBQVhBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFsZUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBZkE7QUFrQkE7QUFHQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUdBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUdBO0FBQ0E7OztBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFDQTs7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUVBOzs7QUFFQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBOzs7QUFFQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7OztBQUVBO0FBQ0E7QUFDQTs7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBREE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBb0NBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBRUE7Ozs7O0FBRUE7Ozs7OztBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFFQTtBQUNBOzs7Ozs7QUFHQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBRUE7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFHQTs7Ozs7QUFDQTs7Ozs7QUFDQTs7Ozs7O0FBQ0E7QUFDQTs7QUFBQTtBQUVBOzs7OztBQUlBO0FBQ0E7Ozs7OztBQUNBOzs7Ozs7QUFDQTtBQUNBOztBQUFBO0FBQ0E7Ozs7O0FBSUE7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFDQTs7Ozs7O0FBQ0E7QUFDQTs7QUFBQTtBQUNBOzs7OztBQUNBOzs7Ozs7QUFDQTtBQUNBOztBQUFBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFHQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7OztBQUVBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUdBO0FBR0E7QUFHQTtBQUdBO0FBR0E7QUFHQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFLQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBSUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OzsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/GnativeSlider.js\n");

/***/ }),

/***/ "./source/js/main.js":
/*!***************************!*\
  !*** ./source/js/main.js ***!
  \***************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _GnativeSlider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../GnativeSlider */ \"./source/GnativeSlider.js\");\n\nwindow.addEventListener('load', function () {\n  new _GnativeSlider__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n    loop: true,\n    itemsContainer: '.someSection .slider .items',\n    animationTime: 200,\n    margin: '5px',\n    btnNext: '.someSection .slider .buttons .button-next',\n    btnPrev: '.someSection .slider .buttons .button-prev',\n    dotsContainer: '.someSection .dotsContainer',\n    exampleOfDot: '.someSection .dotsContainer .exampleOfDot',\n    activeDotClass: 'activeDotClass',\n    itemsCount: 4,\n    nav: true,\n    dots: true,\n    responsive: true,\n    breakpoints: {\n      '1100': {\n        itemsCount: 3,\n        nav: false,\n        dots: true\n      },\n      '960': {\n        itemsCount: 2,\n        nav: false,\n        dots: false\n      },\n      '780': {\n        itemsCount: 1,\n        nav: false,\n        dots: true\n      }\n    },\n    validation: true\n  }).createSlider();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zb3VyY2UvanMvbWFpbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NvdXJjZS9qcy9tYWluLmpzPzA0OTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEduYXRpdmVTbGlkZXIgZnJvbSAnLi4vR25hdGl2ZVNsaWRlcidcclxuXHJcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCkgPT4ge1xyXG5cclxuXHRuZXcgR25hdGl2ZVNsaWRlcih7XHJcblx0XHRsb29wOiB0cnVlLFxyXG5cdFx0aXRlbXNDb250YWluZXI6ICcuc29tZVNlY3Rpb24gLnNsaWRlciAuaXRlbXMnLFxyXG5cdFx0YW5pbWF0aW9uVGltZTogMjAwLFxyXG5cdFx0bWFyZ2luOiAnNXB4JyxcclxuXHRcdGJ0bk5leHQ6ICcuc29tZVNlY3Rpb24gLnNsaWRlciAuYnV0dG9ucyAuYnV0dG9uLW5leHQnLFxyXG5cdFx0YnRuUHJldjogJy5zb21lU2VjdGlvbiAuc2xpZGVyIC5idXR0b25zIC5idXR0b24tcHJldicsXHJcblx0XHRkb3RzQ29udGFpbmVyOiAnLnNvbWVTZWN0aW9uIC5kb3RzQ29udGFpbmVyJyxcclxuXHRcdGV4YW1wbGVPZkRvdDogJy5zb21lU2VjdGlvbiAuZG90c0NvbnRhaW5lciAuZXhhbXBsZU9mRG90JyxcclxuXHRcdGFjdGl2ZURvdENsYXNzOiAnYWN0aXZlRG90Q2xhc3MnLFxyXG5cdFx0aXRlbXNDb3VudDogNCxcclxuXHRcdG5hdjogdHJ1ZSxcclxuXHRcdGRvdHM6IHRydWUsXHJcblx0XHRyZXNwb25zaXZlOiB0cnVlLFxyXG5cdFx0YnJlYWtwb2ludHM6IHtcclxuXHRcdFx0JzExMDAnOiB7XHJcblx0XHRcdFx0aXRlbXNDb3VudDogMyxcclxuXHRcdFx0XHRuYXY6IGZhbHNlLFxyXG5cdFx0XHRcdGRvdHM6IHRydWVcclxuXHRcdFx0fSxcclxuXHRcdFx0Jzk2MCc6IHtcclxuXHRcdFx0XHRpdGVtc0NvdW50OiAyLFxyXG5cdFx0XHRcdG5hdjogZmFsc2UsXHJcblx0XHRcdFx0ZG90czogZmFsc2VcclxuXHRcdFx0fSxcclxuXHRcdFx0Jzc4MCc6IHtcclxuXHRcdFx0XHRpdGVtc0NvdW50OiAxLFxyXG5cdFx0XHRcdG5hdjogZmFsc2UsXHJcblx0XHRcdFx0ZG90czogdHJ1ZVxyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0dmFsaWRhdGlvbjogdHJ1ZVxyXG5cdH0pLmNyZWF0ZVNsaWRlcigpXHJcblxyXG59KSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFYQTtBQWlCQTtBQS9CQTtBQWtDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/js/main.js\n");

/***/ })

/******/ });